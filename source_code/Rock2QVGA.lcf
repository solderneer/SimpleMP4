/*
**********************************************************
*  Copyright (C),2004-2005, Fuzhou Rockchip Co.,Ltd.
*  Function name : RK2_overlay.lcf
*  Author:         Huang Jiliu
*  Description:    实现ROCK2上的MP3等的系统调度
*  Remark:         
*                       
*  History:        
*           <author>      <time>     <version>       <desc>
*           HJL          05/12/22      1.0           ORG
*
***********************************************************
*/
ENTRY(__start)

MEMORY
{
    /*IRAM Memory Range 0x0000--0xE000*/
    IVECTS          :   ORIGIN = 0x0000, LENGTH = 0x0088    /* 17 interrupt vectors of 8 words */
    IRAM            :   ORIGIN = 0x0088, LENGTH = 0x8000/*0x6e78*/
    IRAM_OVR        :   ORIGIN = 0x6F00, LENGTH = 0x7100
    IRAM_OVR1       :   ORIGIN = 0xe000, LENGTH = 0x1800
    IRAM_OVR2       :   ORIGIN = 0xBA00, LENGTH = 0x2600
    IBOOTROM        :   ORIGIN = 0xf800, LENGTH = 0x0800
    
    /*Data Memory Range 0x0000--0xC000*/
    DRAMDATA        :   ORIGIN = 0x0000, LENGTH = 0x0440
    DRAMBSS         :   ORIGIN = 0x0440, LENGTH = 0x0fc0
    DRAMDATA_OVER   :   ORIGIN = 0x1400, LENGTH = 0x9e00    /* Overlap with stack?? */
    DRAMDATA_OVER1  :   ORIGIN = 0xc000, LENGTH = 0x4000
}

SECTIONS 
{
    /****系统代码保留区****/
    .vectors    : {
        *(.vectors); 
    } > IVECTS

    .text   : {
        *(.fasttext);
        *(.text);
        *(.fat_text);
        *(.usb_sd);
        *(.flash_init_text);
        *(.sys_init_text);
        *(.encode_init_text);
    } > IRAM
    
    /****系统数据保留区****/
    .bss    : {
        ___bss_start = .;
        *(.bss);
        /**(.fat_bss);*/
        /**(.usb_bss);*/
        *(COMMON); 
        ___bss_end = .;
    } > DRAMBSS
 
    .data   : {
        *(.data);
        *(.fat_data);
        *(.firmware_data);
    } > DRAMDATA
/***********************FUNCTION1 DRAM OVERLAY*********************************/
    /************** FIRE *************/
    .firmdata_bss 0x1400 :{         /*0x1400 + 0x021c = 0x161c*/
        *(.firmware_bss);
    }>DRAMDATA_OVER 

    .firmupdata_data 0x1700 :{      /*0x1700 + 0x00e3 = 0x17e3*/
        /**(.firmware_data);*/
    }>DRAMDATA_OVER
    
    /************** USB *************/
    .usb_data 0x1400 :{             /*0x1400 + 0x0141 = 0x1541*/
        *(.usb_data);       
    }>DRAMDATA_OVER

    .usb_bss 0x1600 :{              /*0x1600 + 0x128c = 0x288c*/
        *(.usb_bss);
    }>DRAMDATA_OVER
    
    /************** AVI *************/
    .avi_data 0x1400 :{             /*0x1400 + 0x540e = 0x680e*/
        *(.avi_a_data);
        *(.avi_v_data);     
    }>DRAMDATA_OVER

    .avi_bss 0x6820 :{              /*0x6820 + 0x4613 = 0xae33*/
        *(.avi_v_bss);
        *(.avi_a_bss);
        /*(.avi_mp2_bss);*/
    }>DRAMDATA_OVER
    
    /************** MP3 *************/
    .mp3_bss 0x1400 :{              /*0x1400 + 0x45a9 = 0x59a9*/
        *(.mp3_tst);
        *(.mp3_bss);
    }>DRAMDATA_OVER 
    
    .mp3_data 0x59c0 :{             /*0x59c0 + 0x2f31 = 0x88f1*/
        *(.mp3_data);
    }>DRAMDATA_OVER 
    /************** WAV *************/
    .wav_bss 0x1400 :{              /*0x1400 + 0x3015 = 0x4415*/
        *(.wav_tst);
        *(.wav_bss);
    }>DRAMDATA_OVER 

    .wav_data 0x4600 :{             /*0x4600 + 0x001e = 0x461e*/
        *(.wav_data);
    }>DRAMDATA_OVER 
    
    /************ ENCODE ************/
    .enc_bss  0x1400 :{             /*0x1400 + 0x4cb0 = 0x60b0*/
        *(.enc_bss);
        *(.EncoderBss);
    }>DRAMDATA_OVER 

    .enc_data  0x640e :{            /*0x640e + 0x48b4 = 0xacc2*/
        *(.EncoderData);
        *(.enc_data);
    }>DRAMDATA_OVER 
    
    /************** FM **************/
    .fm_bss  0x1400 :{              /*0x1400 + 0x002f = 0x142f*/
        *(.fm_bss);
    }>DRAMDATA_OVER 

    .fm_data  0x1500 :{             /*0x1500 + 0x0000 = 0x1500*/
        *(.fm_data);
    }>DRAMDATA_OVER 
    
    /************** WMA *************/
    .wma_bss 0x1400 :{              /*0x1400 + 0x8b36 = 0x9f36*/
        *(.wma_bss);   
        *(.WmaGlobalData);          /* ahead 7fff          */
        *(.WMA_Buff); 
        *(.WmaEqBss);
        *(.WMATableRunDram);
        *(.bufferdata);    
    }>DRAMDATA_OVER
    
    .wma_data 0x9f40 :{             /*0x9f40 + 0x0795 = 0xa6d5*/
        *(.wma_data);
        *(.WmaIntiTable);
        *(.WmaDecoderTable);
        *(.wmabarktable);
        *(.WmaEqData);
    }>DRAMDATA_OVER
    .wma_table 0x1400 :{        
         *(.wmatable440b);
         *(.wmatable160b);
         *(.wmatable44Qb);
    }>DRAMDATA_OVER
    
/*
    OVERLAY 0xc000 /*0x7964 :{
        .extdata_0 {
            *(.wmatable440b);
        }
        .extdata_1 {
            *(.wmatable160b);
        }
        .extdata_2 {
            *(.wmatable44Qb);
        }
    }   */
/***********************FUNCTION2 DRAM OVERLAY*********************************/
    /************** JPEG *************/
    /*按计算，该地址应该从0x8e00 开始，但
      此时FUNCTION2的空间不够用，因此暂时向前提，但此时不能同时处理两个模块
      也就是说如果要实现MP3与JPEG的共存，DRAM现在是缺少3K*/
    .jpeg_bss 0x1400 :{             /*0x1400 + 0x550b = 0x690b*/
        *(.jpeg_bss);        
    }>DRAMDATA_OVER
       
    .jpeg_data 0x6910: {            /*0x6910 + 0x03ac = 0x6cbc*/
        *(.jpeg_data);
    }>DRAMDATA_OVER   
    
    /************** GAME *************/
    .game_data 0xac00 :{            /*0xac00 + 0x0287 = 0xae87*/
        *(.game_data);
    }>DRAMDATA_OVER 
    
    .game_bss 0xaf00 :{             /*0xaf00 + 0x0111 = 0xb011*/
        *(.game_bss);
    }>DRAMDATA_OVER
    
    /************** TXT *************/
    .txt_bss 0xac00 :{              /*0xac00 + 0x0544 = 0xb144*/
        *(.txt_bss);
        *(.setmenu_bss);
    }>DRAMDATA_OVER
       
    .txt_data 0xb150: {             /*0xb150 + 0x0005 = 0xb155*/
        *(.txt_data);
        *(.setmenu_data);
    }>DRAMDATA_OVER
    /**************MP3 LRC ***********/
    .lrc_bss 0xac00 :{              /*0xac00 + 0x0407 = 0xb007*/
        *(.lrc_bss);
    }>DRAMDATA_OVER
       
    .lrc_data 0xb010: {             /*0xb010 + 0x0000 = 0xb010*/
        *(.lrc_data);
    }>DRAMDATA_OVER
    
    /**************WMA LRC ***********/
    .wmalrc_bss 0xac00 :{           /*0xac00 + 0x0407 = 0xb007*/
        *(.wmalrc_bss);
    }>DRAMDATA_OVER
       
    .wmalrc_data 0xb000: {          /*0xb010 + 0x0000 = 0xb010*/
        *(.wmalrc_data);
    }>DRAMDATA_OVER
    
/***************************FUNCTION1 IRAM OVERLAY*****************************/
/*--------------------------------------------*/
    OVERLAY 0x6F00 : /*0x6f00*/{
        /* AVI decoder */
        .exttext_0 {                    
            *(.avi_v_text);
            *(.avi_a_text);
           /* *(.avi_mp2_bss);*/            
        }
        
        /* MP3 decoder */
        .exttext_1 {
            *(.mp3_text);                  
        }

        .exttext_2 { 
            *(.jpeg_text);            
        }                
        
        /* WMA decoder */
        .exttext_3 {
            *(.wma_text);
            *(.WmaIntiText);
            *(.WmaEqText);
            *(.WmaDecoderText);
            *(.WmaGlobalText);
        }        
        .exttext_4 {
            *(.encode_text);
            *(.enc_text);
            *(.EncoderText);
        }
        .exttext_5 {
            *(.fm_text);
            /**(.sys_init_text);*/
            /**(.encode_init_text);*/
        }
        .exttext_7 {
            *(.usb_text);
        }
        .exttext_8 {
            *(.wav_text);
        }
        
        .exttext_10{
            *(.firmware_text);
        }
    }>IRAM_OVR

    .avi_mp2_bss 0xae30 : {
        *(.avi_mp2_bss);
    } > IRAM_OVR

/***************************FUNCTION2 IRAM OVERLAY*****************************/
    OVERLAY 0xbe00 :{     /*0xbe00*/          

        .exttext_6 {
            *(.txt_text);
            *(.setmenu_text);
        }
        .exttext_9{
            *(.game_text);
        }
    }>IRAM_OVR2
/*****************************************************************************/    
        /* Stack should not cross 0x7fff to 0x8000 boundary */
    __stack_end = 0xb200;       /* Enable linker to identify if enough      */
    __stack_start = 0xbfff;     /* Stack grows down from here */    
                                /* 0xbfff - 0xb400 = 3k */
}
